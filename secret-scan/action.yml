name: 'Secret Scan'
description: 'Run Secret Scanning tools acrosss a repository to ensure that the repo is not compromised'
inputs:
  scan-path:  
    description: 'path to scan for secrets'
    required: true
    default: '${{ github.workspace }}'
  log-outputs:
    description: 'Output counts of secrets found'
    required: true
    default: true
  fail-on-found:
    description: 'fail the build if secrets are found'
    required: true
    default: true
outputs:
  verified-secrets:
    description: "Number of verified secrets found"
    value: ${{ steps.secrets-found.outputs.verified-secrets }}
  unverified-secrets:
    description: "Number of verified secrets found"
    value: ${{ steps.secrets-found.outputs.unverified-secrets }}
runs:
  using: composite
  steps:
    - run: |
        docker run -t -v "${{inputs.scan-path}}:/workdir" trufflesecurity/trufflehog:latest filesystem /workdir \
        --only-verified --json | jq -cs '.[-1]|{"verified":.verified_secrets, "unverified":.unverified_secrets}' \
        > /tmp/th.out
      shell: bash
    - id: secrets-found
      run: |
        echo "verified-secrets=$(jq '."verified"' /tmp/th.out)" >> $GITHUB_OUTPUT && \
        echo "unverified-secrets=$(jq '."unverified"' /tmp/th.out)" >> $GITHUB_OUTPUT
      shell: bash
    - name: Log Outputs
      if: inputs.log-outputs
      uses: actions/github-script@v7
      with:
        script: |
            core.info(`Number of verified secrets: ${{steps.secrets-found.outputs.verified-secrets}}`)
            core.info(`Number of unverified secrets: ${{steps.secrets-found.outputs.unverified-secrets}}`)
    - name: Fail if found
      if: inputs.fail-on-found && steps.scan.outputs.verified-secrets > 0 
      uses: actions/github-script@v7
      with:
        script: |
            core.setFailed('Secrets found.')
 